version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: himnario_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      # Opcional: montar un directorio local para scripts de inicialización
      # - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - himnario_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d himnario_db']
      interval: 30s
      timeout: 10s
      retries: 3

  # Opcional: Incluir pgAdmin para administración web
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: himnario_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - himnario_network
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    container_name: himnario_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - himnario_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  himnario_network:
    driver: bridge
